#!/usr/bin/perl -X
#
# $FreeBSD: CVSROOT-src/commitcheck,v 1.26 2002/10/13 23:25:06 peter Exp $

#
# This script is the first thing that is run at commit time
# to determine whether the committer has commit priviledges.
# (See CVSROOT/commitinfo).
#

use strict;
use lib $ENV{CVSROOT};
use CVSROOT::cfg;
my $CVSROOT = $ENV{CVSROOT} || die "Can't determine CVSROOT (commitcheck)!\n";

# Check that the user is committing on the right machine.
#
use Sys::Hostname;
my $hostname = hostname();
if (@cfg::COMMIT_HOSTS && !grep(/^\Q$hostname\E$/i, @cfg::COMMIT_HOSTS)) {
	print "Please don't commit on this host!\n";
	print "Please commit on ",
	    join(" or ", @cfg::COMMIT_HOSTS),
	    " instead.\n";
	exit 1;
}


# Run locally defined extra commitchecks.
if (defined($cfg::COMMITCHECK_EXTRA) && $cfg::COMMITCHECK_EXTRA) {
	die 'commitcheck: $cfg::COMMITCHECK_EXTRA isn\'t a sub!'
	    unless ref($cfg::COMMITCHECK_EXTRA) eq "CODE";

	die "Failed commitcheck_extra\n" unless &$cfg::COMMITCHECK_EXTRA();
}


#
# Ensure the minimum version of cvs is installed.
#
my $VERSTR = `$cfg::PROG_CVS -v`;
$VERSTR =~ s/.*Concurrent\D*(\S*).*/$1/s;
$VERSTR =~ s/\D+/./g;
my $VERSION = "";
$VERSION = sprintf "%d%02d%02d%02d\n", split /\./, $VERSTR;
unless ($VERSION && $VERSION >= $cfg::MINCVSVERSION) {
	print "The wrong version of CVS is installed (commitcheck)!\n";
	exit 1;
}


#
# Does the access control list allow them commit access?
#
system("$CVSROOT/CVSROOT/cvs_acls.pl", @ARGV);
if ($? >> 8) {
	print "Access control checks failed! (cvs_acls.pl)\n";
	exit 1;
}

#
# Last minute checks and preparations for log_accum.pl later.  This
# records the last directory in this commit so that log_accum knows when
# to finish coalescing commit messages and mail it.
#
system("$CVSROOT/CVSROOT/commit_prep.pl", @ARGV);
if ($? >> 8) {
	print "commit_prep.pl failed!\n";
	exit 1;
}

exit 0;		# Lets do it!

#end
